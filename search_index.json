[
["index.html", "Programming for Economists Chapter 1 Prerequisites", " Programming for Economists Misja Mikkers and Florian Sniekers 2019-12-02 Chapter 1 Prerequisites No prerequisites required No prerequisites required. "],
["intro.html", "Chapter 2 Introduction 2.1 Team 2.2 Datacamp 2.3 Important 2.4 Questions", " Chapter 2 Introduction 2.1 Team In 2019-2020 this course is taught by: Santiago Bohorquez Jose Carreno Bustos Misja Mikkers Marius-Lucian Prisacuta Florian Sniekers Jierui Yang. 2.2 Datacamp We are very happy that we partner with datacamp for this course to teach you both python and R. Datacamp offers great on-line courses for you to learn R and python. 2.3 Important Things to do if you want to follow this course: go to the Canvas page of this course. click on the link to get personal access to datacamp, and enroll with your Tilburg University email address go to the russet server at https://russet.uvt.nl log into the server and click on the green button “Start My Server” copy the address from the address field in your browser (you need to paste this in a webform) after you have done this, go to the webform: https://forms.gle/iZG5AaM3VpnBdGQa9 and fill in this webform. note that you need to fill in the webform on or before January 31 If you do not fill in the webform before the deadline, you cannot get a grade for this course. We use the webform also to plan the tutorials, so keep an eye on Canvas before your first tutorial 2.4 Questions There are no stupid questions, it’s stupid not to ask questions. If you ask us a question by mail, please provide us with the following information: say whether you are an ECO or EBE student mention the group number of your tutorial and/or the name of your tutorial teacher explain your question "],
["schedule.html", "Chapter 3 Schedule 3.1 Before the first lecture 3.2 Before the first tutorial 3.3 Schedule 3.4 Teaching philosophy", " Chapter 3 Schedule 3.1 Before the first lecture For the first lecture it is useful to bring your laptop if you have one. We will show you how to start the server and evaluate python in a jupyter notebook. 3.2 Before the first tutorial go to the russet server at https://russet.uvt.nl and log in create a new notebook by clicking on “New” in the (almost) top right corner choose “Python 3” In the first cell of this notebook, copy-paste the following code: %%bash git clone https://gitlab.uvt.nl/janboone/release.git and press the keys “SHIFT” and “ENTER” at the same time (“ENTER” is sometimes called “RETURN”) the text appears “Cloning into ‘release’.” this adds a new folder called “release”; to see this go to “File” -&gt; “Close and Halt” if you click on the folder “release”, you see that there are three sub-folders called “week1”, “week2”, “week3” each folder has two notebooks, one called “assignment” the other “class” the assignment notebook you make before class and we go (quickly) over it in class the class notebook we do together in class and there will be plenty of time for you to answer questions. 3.3 Schedule In the week of the first lecture, do also the Datacamp course with the introduction to python. After the lecture, we have alternating weeks of classes and Datacamp. Before you come to class, you do the assignment notebook at home. In class we will do the class notebook together. The idea of this is that you can practice python while we are around to quickly answer your questions, help you with errors etc. In the week without a class, you do the Datacamp lecture at home. With Datacamp you learn the python syntax (what code to type). In class we teach you how to use python to solve economic problems. The schedule for the course is as follows: week Datacamp preparation in class python 27/1 Intro to python bring your laptop to the lecture Introduction Lecture 3/2 assignment1.ipynb class1.ipynb 10/2 Intermediate python 17 /2 assignment2.ipynb class2.ipynb 2/3 Pandas foundations 9/3 assignment3.ipynb class3.ipynb 23/3 midterm python R 30/3 Intro to R 6/4 assignment4.ipynb class4a.ipynb and class4b.ipynb 13/4 Intro to tidyverse 20/4 assignment5.ipynb class5a.ipynb and class5b.ipynb 4/5 assignment6.ipynb class6a.ipynb and class6b.ipynb 18/5 reserve TBA exam R TBA resit python and R Note that the exam dates are not currently planned. Also at this moment the exam times are not known. Make sure that you have your notebooks complete before the exam. We will not publish solutions to the notebooks. But if you have your completed notebooks on the russet server, you are allowed to use copy/paste at the exam. 3.4 Teaching philosophy We teach python/R in a way that may seem counter-intuitive to you at first sight. Our starting point is that you are not doing an engineering/IT degree; you are an economist. Hence, we are interested in economic applications; not so much in the details of the python/R language. Of course, you need to learn the basics of the language, things like data-types, control structures etc. In other words, you need to know what a list is, a dictionary, a numpy array, a pandas dataframe, how to define functions, use list comprehension, if-then-else structures etc. This “technical” part you mainly learn via Datacamp. There they teach you the details of the language such that you get the syntax right. By doing their exercises you learn to type python, recognize error messages (when you make mistakes). In class we then focus on applying these tools to economic problems. In class we also type python and we also make mistakes which generate errors. So there is an overlap with the Datacamp lectures, but the focus in class is different. Further, in economics we are interested in optimization (we tend to maximize profits, utility etc.) and solving equations (specifically, solving for fixed points which give us equilibria). For this we use numpy and scipy, which is not covered much at the Datacamp courses that we do. Many concepts you will first see at Datacamp and then we apply them in class. Sometimes it will be the other way around: we used something in class and you learn more details about it at Datacamp. This is perfectly fine. However, it is important that you keep up-to-date with Datacamp otherwise you are going to get lost. Also programming is something that you need to practice. You can do the same the Datacamp two or three times. Also the notebooks that we do in class, you can play around with these. Plot different functions, solve equations for different parameter values etc. Just looking at the answers that we give you in class will not help you to learn to use python/R. Finally, we urge you to use google (or other search engines like DuckDuckGo) and stackoverflow with your assignments. Some students find this weird at the beginning: should we not teach you everything that you need to know? The answer is no for a number of reasons. First, even professional programmers use google and stackoverflow all the time. If you are on Quora; see this post and this one. Second, python and R are open source and lots of people work with it. If you encounter a problem, chances are that someone else had the same problem and knows the solution to it. There is not need to “invent the wheel”. Use the resources available to you. If you copy a lot of code, you should add a reference. Finally, because python and R are open source, they develop rapidly. The things that we teach you now, will be obsolete in a couple of years time. Hence, you need to be able to find your way around also in 10 years time. To start practicing this, use google now. The only warning here is: at the exam you will not have access to the whole internet. So, also make sure that you can find help in the jupyter notebook. We will practice this in class. "],
["important-1.html", "Chapter 4 Important", " Chapter 4 Important Things to do if you want to follow this course: go to the Canvas page of this course. click on the link to get personal access to datacamp, and enroll with your Tilburg University email address go to the russet server at https://russet.uvt.nl log into the server and click on the green button “Start My Server” copy the address from the address field in your browser (you need to paste this in a webform) after you have done this, go to the webform: https://forms.gle/iZG5AaM3VpnBdGQa9 and fill in this webform. note that you need to fill in the webform on or before January 31 if you do not fill in the webform before the deadline, you cannot get a grade for this course we use the webform also to plan the tutorials, so keep an eye on Canvas before your first tutorial "],
["information-first-lecture.html", "Chapter 5 Information first Lecture 5.1 Introduction Programming 5.2 Table of Contents 5.3 Introduction 5.4 Second part of lecture: making sure you get the course material and a grade for this course", " Chapter 5 Information first Lecture 5.1 Introduction Programming Misja Mikkers &amp; Florian Sniekers 5.2 Table of Contents Introduction markdown Second part: how to make sure you get the course material and a grade for this course 5.3 Introduction Don’t panic this is a programming course we know that many of you are not too keen on computers (beyond MS Office) this will be a gentle introduction to open source software it will not become too sophisticated it is meant for everyone to understand especially, if you never did any programming before Why this course? mainly to teach you to use your computer better to be able to use open source (“free”) software to solve problems together with readable documentation on how you solved it (“reproducible research”) on this last point, office products like excel score rather badly you will use R and python in courses in the years to come 5.3.1 Who teaches this course? In 2019-2020 this course is taught by: Santiago Bohorquez Jose Carreno Bustos Misja Mikkers Marius-Lucian Prisacuta Florian Sniekers Jierui Yang. 5.3.2 How do we teach this course? online lectures on Datacamp tutorials: with plenty of time to ask questions there are a number of “regular” tutorials and one in the computer lab if you do not have a laptop, attend the tutorial in the computer lab if you do have a laptop, attend your regular tutorial group no need to attend both! we may drop some tutorial groups, so check Canvas! schedule can be found in the chapter schedule on this website we can track your progress on datacamp assignment notebooks to be made before the class class notebooks that we do together in class (to allow you to ask questions) 5.3.3 Information about the course all information about the course can be found on this website pay attention to: -the schedule: explaining when you need to do what -the rules for the exam explaining how the exam works and a practice exam Your grade -There are two separate ways to earn your grade regular route: -midterm on python -end of semester exam on R resit -exam on python and R combined -you cannot use grades from one route for the other one. 5.3.4 Exam for more information see the exam chapter check the instructions for the exam do not open your exam file after you have finished if you do, your exam will not be graded (even if you did not change anything) at the exam you can freely copy and paste from the assignments we did in class we will not post answers to the assignments make sure you attend the tutorials and pay attention in class! 5.3.5 Datacamp you need to sign up for Datacamp! for details see the chapter Important note the deadline for filling in the webform! if you miss the deadline, you may have to pay for premium content on Datacamp yourself 5.3.6 markdown syntax markdown allows you to create structure in a simple way examples are: # this is a heading ## subheading * first bullet * second bullet [link text](actual link, e.g. http://www.etc) ![Alt text for image](/path/to/img.jpg \"Optional title\") look on the web for other syntax like footnotes etc. equations you can type in latex latex is great word processing software for now, we only need it to write math you can guess what the following will do: $x^2$, $\\beta$, $\\sqrt{9}$, $\\frac{1}{2}$, $\\bar x$ \\begin{equation} a^2 + b^2 = c^2 \\end{equation} if you need something, just google; e.g. “google latex phi” or “google latex empty set” etc. and try it out in the jupyter notebook 5.4 Second part of lecture: making sure you get the course material and a grade for this course go to the server and start a jupyter notebook link to the server address to copy/paste in the google form importing the python material, see chapter Schedule (this is also the way you will import your exam) evaluating cells you can choose python/R kernel getting help: ? and TAB code vs. markdown cell type some latex 5.4.1 before you leave do the steps under the chapter Important "],
["exam-1.html", "Chapter 6 Exam 6.1 Grade 6.2 Useful to know 6.3 Exam procedure", " Chapter 6 Exam 6.1 Grade Your grade is either determined by: the midterm exam which is python only (50%) the exam will be R only (50%) or by the resit which is based on both python and R (100%) Each exam lasts 3 hours. You cannot combine the resit with the midterm etc. 6.2 Useful to know The questions that we ask in the exam are based on the notebooks that we discuss in class. Hence make sure that you have these ready before the exam. You are allowed to use copy-paste out of these notebooks. During the semester, you can use google to find information on functions, error messages etc. However, during the exam you can only access a limited number of pages. In particular, during the exam you work in a special exam environment on TiU computers. We have asked IT to whitelist the following websites: the russet server (where you will do your exam) gitlab (where you will import your exam from) Canvas (where we will give you the command to import the exam) stackoverflow python.org numpy scipy pandas datacamp cookbook tidyverse.org rpubs rstudio r4ds rdocumentation 6.3 Exam procedure we will post the exam both on gitlab. You will get instructions how to get the exam on the Russet server.r finishing your exam make sure that we can easily see which notebook is your exam that is, do not rename the exam notebook (so that we do not know which notebook it is) do not have 5 different versions of the exam notebook; we will then choose one at random and grade this one after you finish the exam, do not re-open the notebook again: we can see the last time the notebook was opened. If this is after you left the exam room, we can see this and will nullify your exam. "],
["references.html", "References", " References "]
]
